// <auto-generated />
using ConsoleApp1.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    [Migration("20230503190909_AddBlogCreatedTimestamp")]
    partial class AddBlogCreatedTimestamp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp1.Domain.Forms.Jogador", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Forms.Jogador", b =>
                {
                    b.OwnsOne("ConsoleApp1.Domain.Equipa.IdentificadorEquipa", "IdentificadorEquipa", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("IdEquipa")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("ConsoleApp1.Domain.Forms.EstatutoFpF", "EstatutoFpF", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Estatuto")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("ConsoleApp1.Domain.Forms.IdentificadorPessoa", "IdentificadorPessoa", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("IdPessoa")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.OwnsOne("ConsoleApp1.Domain.Forms.Licenca", "Licenca", b1 =>
                        {
                            b1.Property<string>("JogadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Lic")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JogadorId");

                            b1.ToTable("Jogadores");

                            b1.WithOwner()
                                .HasForeignKey("JogadorId");
                        });

                    b.Navigation("EstatutoFpF")
                        .IsRequired();

                    b.Navigation("IdentificadorEquipa")
                        .IsRequired();

                    b.Navigation("IdentificadorPessoa")
                        .IsRequired();

                    b.Navigation("Licenca")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
