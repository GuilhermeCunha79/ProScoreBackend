// <auto-generated />
using ConsoleApp1.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    partial class DDDSample1DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp1.Domain.Associacao.Associacao", b =>
                {
                    b.Property<string>("NomeAssociacao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NomeAssociacao");

                    b.ToTable("Associacao", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Categoria.Categoria", b =>
                {
                    b.Property<string>("TipoCategoria")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoCategoria");

                    b.ToTable("Categoria", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Clube.Clube", b =>
                {
                    b.Property<int>("CodigoClube")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NifClube")
                        .HasColumnType("int");

                    b.Property<string>("NomeAssociacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomeClube")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NrEquipas")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneClube")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoClube");

                    b.HasIndex("NomeAssociacao");

                    b.ToTable("Clube", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.CodigoPaises.CodigoPaises", b =>
                {
                    b.Property<string>("CodPais")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodPais");

                    b.ToTable("CodigoPaises", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.DocumentoIdentificacao.DocIdentificacao", b =>
                {
                    b.Property<int>("NrIdentificacao")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CheckDigit")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LetrasDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidadeDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NrIdentificacao");

                    b.ToTable("DocumentoIdentificacao", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Equipa.Equipa", b =>
                {
                    b.Property<int>("IdentificadorEquipa")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoClube")
                        .HasColumnType("int");

                    b.Property<string>("Divisao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TipoGenero")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TipoModalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdentificadorEquipa");

                    b.HasIndex("CodigoClube");

                    b.HasIndex("TipoCategoria");

                    b.HasIndex("TipoGenero");

                    b.HasIndex("TipoModalidade");

                    b.ToTable("Equipa", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Genero.Genero", b =>
                {
                    b.Property<string>("TipoGenero")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoGenero");

                    b.ToTable("Genero", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoDefinitivaAssociacaoEquipa.InscricaoDefinitivaAssociacaoEquipa", b =>
                {
                    b.Property<int>("CodOperacao")
                        .HasColumnType("int");

                    b.Property<int>("IdentificadorEquipa")
                        .HasColumnType("int");

                    b.Property<string>("NomeAssociacao")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CodOperacao", "IdentificadorEquipa", "NomeAssociacao");

                    b.HasIndex("CodOperacao")
                        .IsUnique();

                    b.HasIndex("IdentificadorEquipa");

                    b.ToTable("InscricaoDefinitivaAssociacaoEquipa", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoDefinitivaAssociacaoJogador.InscricaoDefinitivaAssociacaoJogador", b =>
                {
                    b.Property<int>("CodOperacao")
                        .HasColumnType("int");

                    b.Property<int>("Licenca")
                        .HasColumnType("int");

                    b.Property<string>("NomeAssociacao")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CodOperacao", "Licenca", "NomeAssociacao");

                    b.HasIndex("CodOperacao")
                        .IsUnique();

                    b.HasIndex("Licenca");

                    b.ToTable("InscricaoDefinitivaAssociacaoJogador", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoProvisoriaClubeEquipa.InscricaoProvisoriaClubeEquipa", b =>
                {
                    b.Property<int>("CodOperacao")
                        .HasColumnType("int");

                    b.Property<int>("IdentificadorEquipa")
                        .HasColumnType("int");

                    b.Property<int>("CodigoClube")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JogadorLicenca")
                        .HasColumnType("int");

                    b.HasKey("CodOperacao", "IdentificadorEquipa", "CodigoClube");

                    b.HasIndex("CodOperacao")
                        .IsUnique();

                    b.HasIndex("CodigoClube");

                    b.HasIndex("IdentificadorEquipa");

                    b.HasIndex("JogadorLicenca");

                    b.ToTable("InscricaoProvisoriaClubeEquipa", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoProvisoriaClubeJogador.InscricaoProvisoriaClubeJogador", b =>
                {
                    b.Property<int>("CodOperacao")
                        .HasColumnType("int");

                    b.Property<int>("Licenca")
                        .HasColumnType("int");

                    b.Property<int>("CodigoClube")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodOperacao", "Licenca", "CodigoClube");

                    b.HasIndex("CodOperacao")
                        .IsUnique();

                    b.HasIndex("CodigoClube");

                    b.HasIndex("Licenca");

                    b.ToTable("InscricaoProvisoriaClubeJogador", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Jogador.Jogador", b =>
                {
                    b.Property<int>("Licenca")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("EstatutoFpF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdentificadorEquipa")
                        .HasColumnType("int");

                    b.Property<int>("IdentificadorPessoa")
                        .HasColumnType("int");

                    b.HasKey("Licenca");

                    b.HasIndex("IdentificadorEquipa");

                    b.HasIndex("IdentificadorPessoa")
                        .IsUnique();

                    b.ToTable("Jogador", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Modalidade.Modalidade", b =>
                {
                    b.Property<string>("TipoModalidade")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoModalidade");

                    b.ToTable("Modalidade", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Nacionalidade.Nacionalidade", b =>
                {
                    b.Property<string>("NacionalidadePais")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NacionalidadePais");

                    b.HasIndex("NomePais", "CodPaises")
                        .IsUnique();

                    b.ToTable("Nacionalidade", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Pais.Pais", b =>
                {
                    b.Property<string>("NomePais")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NomePais");

                    b.ToTable("Pais", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.PaisCodigo.PaisCodigo", b =>
                {
                    b.Property<string>("NomePais")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodPaises")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NomePais", "CodPaises");

                    b.HasIndex("CodPaises");

                    b.ToTable("PaisCodigo", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.PaisNascenca.PaisNascenca", b =>
                {
                    b.Property<string>("NascencaPais")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodPaises")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NascencaPais");

                    b.HasIndex("NomePais", "CodPaises")
                        .IsUnique();

                    b.ToTable("PaisNascenca", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Pessoa.Pessoa", b =>
                {
                    b.Property<int>("IdentificadorPessoa")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcelhoResidência")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NacionalidadePais")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NascencaPais")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NrIdentificacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoGenero")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdentificadorPessoa");

                    b.HasIndex("NacionalidadePais")
                        .IsUnique();

                    b.HasIndex("NascencaPais")
                        .IsUnique();

                    b.HasIndex("NrIdentificacao")
                        .IsUnique();

                    b.HasIndex("TipoGenero");

                    b.ToTable("Pessoa", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.ProcessoInscricao.ProcessoInscricao", b =>
                {
                    b.Property<int>("CodOperacao")
                        .HasColumnType("int");

                    b.Property<string>("DataRegisto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSubscricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpocaDesportiva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodOperacao");

                    b.ToTable("ProcessoInscricao", "dbo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Clube.Clube", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.Associacao.Associacao", "Associacao")
                        .WithMany("Clubes")
                        .HasForeignKey("NomeAssociacao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Associacao");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Equipa.Equipa", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.Clube.Clube", "Clube")
                        .WithMany("Equipas")
                        .HasForeignKey("CodigoClube")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Categoria.Categoria", "Categoria")
                        .WithMany("Equipas")
                        .HasForeignKey("TipoCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Genero.Genero", "Genero")
                        .WithMany("Equipa")
                        .HasForeignKey("TipoGenero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Modalidade.Modalidade", "Modalidade")
                        .WithMany("Equipas")
                        .HasForeignKey("TipoModalidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Clube");

                    b.Navigation("Genero");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoDefinitivaAssociacaoEquipa.InscricaoDefinitivaAssociacaoEquipa", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.ProcessoInscricao.ProcessoInscricao", "ProcessoInscricao")
                        .WithOne("InscricaoDefinitivaAssociacaoEquipa")
                        .HasForeignKey("ConsoleApp1.Domain.InscricaoDefinitivaAssociacaoEquipa.InscricaoDefinitivaAssociacaoEquipa", "CodOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Equipa.Equipa", "Equipa")
                        .WithMany("InscricaoDefinitivaAssociacaoEquipa")
                        .HasForeignKey("IdentificadorEquipa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipa");

                    b.Navigation("ProcessoInscricao");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoDefinitivaAssociacaoJogador.InscricaoDefinitivaAssociacaoJogador", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.ProcessoInscricao.ProcessoInscricao", "ProcessoInscricao")
                        .WithOne("InscricaoDefinitivaAssociacaoJogador")
                        .HasForeignKey("ConsoleApp1.Domain.InscricaoDefinitivaAssociacaoJogador.InscricaoDefinitivaAssociacaoJogador", "CodOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Jogador.Jogador", "Jogador")
                        .WithMany("InscricaoDefinitivaAssociacaoJogador")
                        .HasForeignKey("Licenca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("ProcessoInscricao");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoProvisoriaClubeEquipa.InscricaoProvisoriaClubeEquipa", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.ProcessoInscricao.ProcessoInscricao", "ProcessoInscricao")
                        .WithOne("InscricaoProvisoriaClubeEquipa")
                        .HasForeignKey("ConsoleApp1.Domain.InscricaoProvisoriaClubeEquipa.InscricaoProvisoriaClubeEquipa", "CodOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Clube.Clube", "Clube")
                        .WithMany("InscricaoProvisoriaClubeEquipa")
                        .HasForeignKey("CodigoClube")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Equipa.Equipa", "Equipa")
                        .WithMany("InscricaoProvisoriaClubeEquipa")
                        .HasForeignKey("IdentificadorEquipa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Jogador.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorLicenca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clube");

                    b.Navigation("Equipa");

                    b.Navigation("Jogador");

                    b.Navigation("ProcessoInscricao");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.InscricaoProvisoriaClubeJogador.InscricaoProvisoriaClubeJogador", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.ProcessoInscricao.ProcessoInscricao", "ProcessoInscricao")
                        .WithOne("InscricaoProvisoriaClubeJogador")
                        .HasForeignKey("ConsoleApp1.Domain.InscricaoProvisoriaClubeJogador.InscricaoProvisoriaClubeJogador", "CodOperacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Clube.Clube", "Clube")
                        .WithMany("InscricaoProvisoriaClubeJogador")
                        .HasForeignKey("CodigoClube")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Jogador.Jogador", "Jogador")
                        .WithMany("InscricaoProvisoriaClubeJogador")
                        .HasForeignKey("Licenca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clube");

                    b.Navigation("Jogador");

                    b.Navigation("ProcessoInscricao");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Jogador.Jogador", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.Equipa.Equipa", "Equipa")
                        .WithMany("Jogadores")
                        .HasForeignKey("IdentificadorEquipa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Pessoa.Pessoa", "Pessoa")
                        .WithOne("Jogador")
                        .HasForeignKey("ConsoleApp1.Domain.Jogador.Jogador", "IdentificadorPessoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipa");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Nacionalidade.Nacionalidade", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.PaisCodigo.PaisCodigo", "PaisCodigo")
                        .WithOne("Nacionalidade")
                        .HasForeignKey("ConsoleApp1.Domain.Nacionalidade.Nacionalidade", "NomePais", "CodPaises")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaisCodigo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.PaisCodigo.PaisCodigo", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.CodigoPaises.CodigoPaises", "CodigoPaises")
                        .WithMany("PaisCodigo")
                        .HasForeignKey("CodPaises")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Pais.Pais", "Pais")
                        .WithMany("PaisCodigo")
                        .HasForeignKey("NomePais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoPaises");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.PaisNascenca.PaisNascenca", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.PaisCodigo.PaisCodigo", "PaisCodigo")
                        .WithOne("PaisNascenca")
                        .HasForeignKey("ConsoleApp1.Domain.PaisNascenca.PaisNascenca", "NomePais", "CodPaises")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaisCodigo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Pessoa.Pessoa", b =>
                {
                    b.HasOne("ConsoleApp1.Domain.Nacionalidade.Nacionalidade", "Nacionalidade")
                        .WithOne("Pessoa")
                        .HasForeignKey("ConsoleApp1.Domain.Pessoa.Pessoa", "NacionalidadePais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.PaisNascenca.PaisNascenca", "PaisNascenca")
                        .WithOne("Pessoa")
                        .HasForeignKey("ConsoleApp1.Domain.Pessoa.Pessoa", "NascencaPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.DocumentoIdentificacao.DocIdentificacao", "DocIdentificacao")
                        .WithOne("Pessoa")
                        .HasForeignKey("ConsoleApp1.Domain.Pessoa.Pessoa", "NrIdentificacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Domain.Genero.Genero", "Genero")
                        .WithMany("Pessoa")
                        .HasForeignKey("TipoGenero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocIdentificacao");

                    b.Navigation("Genero");

                    b.Navigation("Nacionalidade");

                    b.Navigation("PaisNascenca");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Associacao.Associacao", b =>
                {
                    b.Navigation("Clubes");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Categoria.Categoria", b =>
                {
                    b.Navigation("Equipas");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Clube.Clube", b =>
                {
                    b.Navigation("Equipas");

                    b.Navigation("InscricaoProvisoriaClubeEquipa");

                    b.Navigation("InscricaoProvisoriaClubeJogador");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.CodigoPaises.CodigoPaises", b =>
                {
                    b.Navigation("PaisCodigo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.DocumentoIdentificacao.DocIdentificacao", b =>
                {
                    b.Navigation("Pessoa")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Equipa.Equipa", b =>
                {
                    b.Navigation("InscricaoDefinitivaAssociacaoEquipa");

                    b.Navigation("InscricaoProvisoriaClubeEquipa");

                    b.Navigation("Jogadores");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Genero.Genero", b =>
                {
                    b.Navigation("Equipa");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Jogador.Jogador", b =>
                {
                    b.Navigation("InscricaoDefinitivaAssociacaoJogador");

                    b.Navigation("InscricaoProvisoriaClubeJogador");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Modalidade.Modalidade", b =>
                {
                    b.Navigation("Equipas");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Nacionalidade.Nacionalidade", b =>
                {
                    b.Navigation("Pessoa")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Pais.Pais", b =>
                {
                    b.Navigation("PaisCodigo");
                });

            modelBuilder.Entity("ConsoleApp1.Domain.PaisCodigo.PaisCodigo", b =>
                {
                    b.Navigation("Nacionalidade")
                        .IsRequired();

                    b.Navigation("PaisNascenca")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Domain.PaisNascenca.PaisNascenca", b =>
                {
                    b.Navigation("Pessoa")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Domain.Pessoa.Pessoa", b =>
                {
                    b.Navigation("Jogador")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Domain.ProcessoInscricao.ProcessoInscricao", b =>
                {
                    b.Navigation("InscricaoDefinitivaAssociacaoEquipa")
                        .IsRequired();

                    b.Navigation("InscricaoDefinitivaAssociacaoJogador")
                        .IsRequired();

                    b.Navigation("InscricaoProvisoriaClubeEquipa")
                        .IsRequired();

                    b.Navigation("InscricaoProvisoriaClubeJogador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
